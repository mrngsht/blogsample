---
interface Props {
  invertColorOnPageScroll?: boolean;
}

const { invertColorOnPageScroll } = Astro.props;
---

<header>
  <nav>
    <div class="nav-hamburger">
      <div class="hamburger-header">
        <div class="hamburger-icon hamburger-icon-open">
          <span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              focusable="false"
              fill="none"
              viewBox="0 0 18 16"
            >
              <path
                d="M1 .5a.5.5 0 100 1h15.71a.5.5 0 000-1H1zM.5 8a.5.5 0 01.5-.5h15.71a.5.5 0 010 1H1A.5.5 0 01.5 8zm0 7a.5.5 0 01.5-.5h15.71a.5.5 0 010 1H1a.5.5 0 01-.5-.5z"
                fill="currentColor"
              >
              </path></svg
            >
          </span>
        </div>
        <div class="hamburger-icon hamburger-icon-close">
          <span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              focusable="false"
              fill="none"
              viewBox="0 0 18 17"
            >
              <path
                d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z"
                fill="currentColor"
              >
              </path></svg
            >
          </span>
        </div>

        <div>
          <a class="logo" href="/">AMAM+</a>
        </div>

        <div></div>
      </div>

      <div class="hamburger-list">
        <a class="menu" href="/news/page/1">news</a>
        <a class="menu" href="/about">about</a>
        <a class="menu" href="/webstore">webstore</a>
        <a class="menu" href="/contact">contact</a>
      </div>
    </div>
  </nav>
</header>

<style>
  header {
    --header-fg-color: var(--main-fg-color);
    --header-bg-color: rgba(255, 255, 255, 1);
    --hamburger-list-bg-color: rgba(255, 255, 255, 1);
    --hamburger-list-hover-bg-color: rgba(18, 18, 18, 0.04);

    --header-fg-color-inverted: rgba(255, 255, 255, 1);
    --header-bg-color-inverted: transparent;
    --hamburger-list-bg-color-inverted: rgba(153, 153, 153,  0.7);
    --hamburger-list-hover-bg-color-inverted: rgba(100, 100, 100, 0.2);

    position: -webkit-sticky;
    position: sticky;
    top: 0;
    width: 100%;
    height: var(--header-height);
    background-color: var(--header-bg-color);
    z-index: 10;
  }

  header nav {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 15;
  }

  header a {
    color: var(--header-fg-color);
  }

  header a.logo {
    display: inline-block;
    margin: auto auto;
    text-decoration: none;
    font-size: 2.2rem;
    font-weight: 500;
    letter-spacing: .22rem;
    line-height: 1.2;
  }

  .nav-hamburger {
    width: 100%;
    height: 100%;
  }

  .hamburger-header {
    display: grid;
    grid-template-columns: 1fr 13rem 1fr;
    width: 100%;
    height: 100%;
  }

  .hamburger-header a.logo {
    display: block;
    text-align: center;
    text-decoration: none;
  }

  .hamburger-header > div {
    display: flex;           
    justify-content: center; 
    align-items: center;    
  }

  .hamburger-icon span {
    cursor: pointer;
    display: block;
    margin: auto auto auto 1.5rem;
    padding: 0.5rem;
  }

  .hamburger-icon svg {
    color: var(--header-fg-color);
    width: 1.5rem;
    height: 1.5rem;
  }

  .nav-hamburger.expanded .hamburger-icon-open {
    display: none;
  }
  .nav-hamburger.expanded .hamburger-icon-close {
    display: flex;
  }
  .nav-hamburger .hamburger-icon-open {
    display: flex;
  }
  .nav-hamburger .hamburger-icon-close {
    display: none;
  }

  .nav-hamburger .hamburger-list {
    display: none;
  }

  .nav-hamburger.expanded .hamburger-list {
    display: block;
    position: absolute; 
    top: var(--header-height);
    left: 0;
    z-index: 10;
    background-color: var(--hamburger-list-bg-color);
    width: 100%;
    height: calc(100vh - var(--header-height));
    padding-top: 2rem;
  }

  .hamburger-list a.menu {
    display: block;
    text-align: left;
    font-size: 1.1rem;
    font-weight: 1000;
    letter-spacing: .18rem;
    line-height: 1.3;
    text-decoration: none;
    padding: 1rem 2rem;
    text-transform: uppercase;
  }

  .hamburger-list a.menu:hover {
    background-color: var(--hamburger-list-hover-bg-color);
  }

  header.color-inverted {
    background-color: var(--header-bg-color-inverted);
  }
  header.color-inverted a {
    color: var(--header-fg-color-inverted);
  }
  header.color-inverted .hamburger .line {
    background-color: var(--header-fg-color-inverted);
  }
  header.color-inverted .hamburger-icon svg {
    color: var(--header-fg-color-inverted);
  }
  header.color-inverted .nav-hamburger.expanded .hamburger-list {
    background-color: var(--hamburger-list-bg-color-inverted);
  }
  header.color-inverted .hamburger-list a.menu:hover {
    background-color: var(--hamburger-list-hover-bg-color-inverted);
  }

</style>

<script>
  document.addEventListener("click", e => {
    let target = e.target as HTMLElement;
    if (target.closest(".hamburger-icon")) {
      document.querySelector(".nav-hamburger")?.classList.toggle("expanded");
      document.body.classList.toggle("no-scroll");
    } else if (!target.closest(".hamburger-list")) {
      document.querySelector(".nav-hamburger")?.classList.remove("expanded");
      document.body.classList.remove("no-scroll");
    } 
  });
</script>


{invertColorOnPageScroll && (
  <script>
  const toggleColorInverted = () => {
    if (document.documentElement.scrollTop < document.documentElement.clientHeight) {
      document.querySelector("header")?.classList.add("color-inverted");
    } else {
      document.querySelector("header")?.classList.remove("color-inverted");
    }
  }

  document.addEventListener('DOMContentLoaded', _ => {
    toggleColorInverted()
    window.addEventListener('scroll', toggleColorInverted)
    window.addEventListener('resize', toggleColorInverted)
  })
  </script>
)}
